/////////////////////////////////////////////////////////////////////////////////////////////////////////
// For Main loop()                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////
bool AUTOPILOT_ON = false;
bool SAFEMODE_ON = true;
//
#define toggleDebounce 500000 // half second debounce for rf button toggles
unsigned long lastAutoPilotToggle = 0;
unsigned long lastSafeModeToggle = 0;

/////////////////////////////////////////////////////////////////////////////////////////////////////////
// For Distance Harmonizer                                                                             //
/////////////////////////////////////////////////////////////////////////////////////////////////////////
int frontLeftDistance, frontMiddleDistance, frontRightDistance;

/////////////////////////////////////////////////////////////////////////////////////////////////////////
// For Ultrasonic historical graph                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////
int A13_History[8] = {0, 0, 0, 0, 0, 0, 0, 0};
int A14_History[8] = {0, 0, 0, 0, 0, 0, 0, 0};
int A15_History[8] = {0, 0, 0, 0, 0, 0, 0, 0};
int ultrasonicHistoryPointer = 0; // Pointer for referencing position in history arrays

/////////////////////////////////////////////////////////////////////////////////////////////////////////
// For IR Proximity                                                                                    //
/////////////////////////////////////////////////////////////////////////////////////////////////////////
int irProxValueFL = 0;
int irProxValueFC = 0;
int irProxValueFR = 0;
// Drop watch
int irDropValueFL = 0;
int irDropValueFR = 0;

/////////////////////////////////////////////////////////////////////////////////////////////////////////
// For Auto-Pilot                                                                                      //
/////////////////////////////////////////////////////////////////////////////////////////////////////////
String DRIVE_INSTRUCTION;

/////////////////////////////////////////////////////////////////////////////////////////////////////////
// For NRF24L01                                                                                        //
/////////////////////////////////////////////////////////////////////////////////////////////////////////
int dataFromTransmitter[4]; // for receive data, must match transmitter datatype/size!

/////////////////////////////////////////////////////////////////////////////////////////////////////////
// For Motor Driver                                                                                       //
/////////////////////////////////////////////////////////////////////////////////////////////////////////
unsigned long advancedFunctionStart = 0;

/////////////////////////////////////////////////////////////////////////////////////////////////////////
// For DF Player                                                                                       //
/////////////////////////////////////////////////////////////////////////////////////////////////////////
bool MUSIC_ON = false;

/////////////////////////////////////////////////////////////////////////////////////////////////////////
// ///////////////                                                                                     //
// END GLOBAL VARS                                                                                     //
// ///////////////                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////

void setup()
{
  // Set up Serials
  Serial.begin(115200); // Serial0 - Main debug/USB serial
  Serial2.begin(9600);  // Hardware Serial2 for DFPlayer -- seems to need 9600 baud

  // Initiate robot systems
  initDistanceSensors(); // Must init before NRF24L01
  initNRF24();
  initDFPLAYER();
  initOLED();
  initDriveMotors();
}

void loop()
{
  // get distances through Distance Harmonizer
  getDistances();

  // check NRF24 for radio instructions
  radioLink();

  // check for IR remote signal [todo: deprecate]
  checkIR_Remote();

  // Auto-Pilot
  if (AUTOPILOT_ON)
  {
    autoControl();
  }
  else
  {
    manualControl();
  }
}
